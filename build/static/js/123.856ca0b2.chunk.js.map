{"version":3,"file":"static/js/123.856ca0b2.chunk.js","mappings":"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","sources":["Auth/SignUp.jsx"],"sourcesContent":["import React, {useState, useEffect, useContext} from 'react'\r\nimport './signUp.css' \r\nimport {Link, useNavigate} from 'react-router-dom'\r\nimport { AuthContext } from '../App'\r\n\r\nfunction SignUp() {\r\n    const navigate = useNavigate()\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\r\n    const [username, setUsername] = useState(\"\")\r\n    const [message, setMessage] = useState('')\r\n    const [type, setType] = useState('password')\r\n\r\n\r\n    const handleClick =(e)=>{\r\n        e.preventDefault()\r\n\r\n        if(password !== confirmPassword){\r\n            setMessage('passwords do not match')\r\n            setTimeout(() => {\r\n                setMessage('')\r\n            }, 2000);\r\n            return\r\n        }\r\n        if( \r\n            email.trim() === '' ||\r\n            password.trim() === '' ||\r\n            username.trim() === ''\r\n            ){\r\n            setMessage('all fields required')\r\n            setTimeout(() => {\r\n                setMessage('')\r\n            }, 2000);\r\n            return\r\n        }\r\n        if(password.length<4){\r\n            setMessage('password too short')\r\n            setTimeout(() => {\r\n                setMessage('')\r\n            }, 2000);\r\n            return\r\n        }\r\n\r\n\r\n\r\n        fetch(\"http://chatbaze.site/signUp\",{\r\n            method: 'POST',\r\n            headers : {\r\n            'Content-Type' : 'application/json'\r\n          },\r\n          body:JSON.stringify(\r\n            { email:email, password: password, username: username}\r\n          )\r\n        })\r\n        .then(res=> {return res.json()})\r\n        .then(user => {\r\n            if(user){\r\n                if(user==='login') navigate('/signin')\r\n                if(typeof user === 'string'){\r\n                    setMessage(user)\r\n                    setTimeout(() => {\r\n                        setMessage('')\r\n                    }, 2000);    \r\n            }}\r\n        })    \r\n    }\r\n\r\n    return (\r\n        <section className=\"signIn\">\r\n            <form className='signInForm'>\r\n                <h2 className='formElement'>Sign Up</h2>\r\n\r\n                <div className=\"formElement\">\r\n                    <label htmlFor=\"email\">EMAIL</label>\r\n                    <input type=\"email\" name='email' className='signInFormInput'\r\n                    value={email} required\r\n                    onChange={e=> setEmail(e.target.value)}/>\r\n                </div>\r\n\r\n                <div className=\"formElement\">\r\n                    <label htmlFor=\"password\">PASSWORD</label>\r\n                    <div className=\"password\">\r\n                        <input type={type} name='password' className='signInFormInput'\r\n                        value={password} required\r\n                        onChange={e=> setPassword(e.target.value)}/>\r\n                        \r\n                        {type === 'password' && <svg onClick={()=>setType('text')} width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" color=\"#000\"><path d=\"M10 12a2 2 0 100-4 2 2 0 000 4z\"></path><path fillRule=\"evenodd\" d=\"M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z\" clipRule=\"evenodd\"></path></svg>}\r\n\r\n                        {type === 'text' && <svg onClick={()=>setType('password')} width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" color=\"#000\"><path fillRule=\"evenodd\" d=\"M3.707 2.293a1 1 0 00-1.414 1.414l14 14a1 1 0 001.414-1.414l-1.473-1.473A10.014 10.014 0 0019.542 10C18.268 5.943 14.478 3 10 3a9.958 9.958 0 00-4.512 1.074l-1.78-1.781zm4.261 4.26l1.514 1.515a2.003 2.003 0 012.45 2.45l1.514 1.514a4 4 0 00-5.478-5.478z\" clipRule=\"evenodd\"></path><path d=\"M12.454 16.697L9.75 13.992a4 4 0 01-3.742-3.741L2.335 6.578A9.98 9.98 0 00.458 10c1.274 4.057 5.065 7 9.542 7 .847 0 1.669-.105 2.454-.303z\"></path></svg>}\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"formElement\">\r\n                    <label htmlFor=\"password\">CONFIRM PASSWORD</label>\r\n                    <div className=\"password\">\r\n                        <input type={type} name='password' className='signInFormInput'\r\n                        value={confirmPassword} required\r\n                        onChange={e=> setConfirmPassword(e.target.value)}/>\r\n                        \r\n                        {type === 'password' && <svg onClick={()=>setType('text')} width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" color=\"#000\"><path d=\"M10 12a2 2 0 100-4 2 2 0 000 4z\"></path><path fillRule=\"evenodd\" d=\"M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z\" clipRule=\"evenodd\"></path></svg>}\r\n\r\n                        {type === 'text' && <svg onClick={()=>setType('password')} width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" color=\"#000\"><path fillRule=\"evenodd\" d=\"M3.707 2.293a1 1 0 00-1.414 1.414l14 14a1 1 0 001.414-1.414l-1.473-1.473A10.014 10.014 0 0019.542 10C18.268 5.943 14.478 3 10 3a9.958 9.958 0 00-4.512 1.074l-1.78-1.781zm4.261 4.26l1.514 1.515a2.003 2.003 0 012.45 2.45l1.514 1.514a4 4 0 00-5.478-5.478z\" clipRule=\"evenodd\"></path><path d=\"M12.454 16.697L9.75 13.992a4 4 0 01-3.742-3.741L2.335 6.578A9.98 9.98 0 00.458 10c1.274 4.057 5.065 7 9.542 7 .847 0 1.669-.105 2.454-.303z\"></path></svg>}\r\n\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"formElement\">\r\n                    <label htmlFor=\"username\">CHOOSE USERNAME</label>\r\n                    <input type=\"text\" name='username' className='signInFormInput'\r\n                    value={username} required\r\n                    onChange={e=> setUsername(e.target.value)}/>\r\n                </div>\r\n\r\n                <p style={{color:'red'}}>{message}</p>             \r\n\r\n                <div className=\"formElement\">\r\n                    <button onClick={handleClick} className='authbtn'>SIGN UP</button>\r\n                </div>\r\n\r\n                <div className=\"formElement\">\r\n                    <Link to='/signIn'>Already have an account? Sign In</Link>\r\n                    {/* <Link to='/forgotPassword'>Forgot Password?</Link> */}\r\n                </div>\r\n                \r\n                \r\n            </form>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default SignUp\r\n"],"names":["navigate","useNavigate","useState","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","username","setUsername","message","setMessage","type","setType","className","htmlFor","name","value","required","onChange","e","target","onClick","width","height","xmlns","viewBox","fill","color","d","fillRule","clipRule","style","preventDefault","setTimeout","trim","length","fetch","method","headers","body","JSON","stringify","then","res","json","user","to"],"sourceRoot":""}