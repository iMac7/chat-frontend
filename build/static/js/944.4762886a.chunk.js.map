{"version":3,"file":"static/js/944.4762886a.chunk.js","mappings":"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","sources":["Profile/Profile.jsx"],"sourcesContent":["import React, {useEffect, useState, useContext, useCallback} from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { AuthContext } from '../App'\r\nimport ImgUpload from '../Shared/ImgUpload'\r\nimport './profile.css'\r\n\r\n\r\nfunction Profile(props) {\r\n    const navigate = useNavigate()\r\n\r\n    const {userdata, isLoggedIn} = useContext(AuthContext)\r\n    const userID = userdata?.userID\r\n    const [user, setUser] = useState({})\r\n    const [bio, setBio] = useState('')\r\n    const [username, setUsername] = useState('')\r\n    const [image, setImage] = useState()\r\n    const [profileMessage, setProfileMessage] = useState('')\r\n    const [profilePicMessage, setprofilePicMessage] = useState('')\r\n\r\n    const fetchdata = useCallback(\r\n      () => {         \r\n             fetch(`http://chatbaze.site/profile/${userID}`,{\r\n                 headers : {\r\n                     'authorization' : JSON.stringify(userdata)\r\n                 }\r\n             })\r\n             .then(res => res.json())\r\n             .then(user => {\r\n                 setUser(user)\r\n                 props.setProfilePic(user.profileURL)\r\n             })            \r\n    },[userID,userdata,props],)\r\n\r\n    \r\n    useEffect(() => {\r\n        if(isLoggedIn===false) navigate('/signIn')\r\n        else{\r\n            try {\r\n                fetchdata()                \r\n            }catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n        }, [userID, userdata,navigate,isLoggedIn,fetchdata]) \r\n\r\n    //update username and bio\r\n    const handleClick = async (e) => {\r\n        e.preventDefault()\r\n\r\n        if(username.trim() === '' && bio.trim() === ''){\r\n            setProfileMessage('nothing changed!');                    \r\n            setTimeout(() => {\r\n                setProfileMessage('')\r\n            }, 2000);\r\n            return\r\n        }\r\n\r\n        const formdata = new FormData()\r\n        formdata.append('username', username)\r\n        formdata.append('bio', bio)\r\n\r\n        if(username === user.username && bio === user.bio){\r\n            setProfileMessage('nothing changed!');                    \r\n            setTimeout(() => {\r\n                setProfileMessage('')\r\n            }, 2000);\r\n        }\r\n\r\n        try {\r\n            await fetch(`http://chatbaze.site/profile/${userID}/update`,{\r\n                method: 'POST',\r\n                headers : {\r\n                    'authorization' : JSON.stringify(userdata),\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body:JSON.stringify({username,bio}),\r\n            })\r\n            .then( res => res.json())\r\n            .then(parsed => {\r\n                console.log(parsed)\r\n                if(typeof parsed === 'string'){\r\n                    setProfileMessage(parsed)\r\n                    setTimeout(() => {\r\n                        setProfileMessage('')\r\n                    }, 2000);\r\n                }\r\n            })\r\n\r\n            setBio('')\r\n            setUsername('')\r\n\r\n            setTimeout(() => {\r\n                fetchdata()                       \r\n            }, 5000);\r\n        }            \r\n        catch (error) {\r\n            console.log(error);\r\n        }           \r\n    }\r\n\r\n    //update profile pic\r\n    const handleProfile = async (e) => {\r\n        e.preventDefault()\r\n        if(!image) {\r\n            setprofilePicMessage('no image selected')\r\n            setTimeout(() => {\r\n                setprofilePicMessage('')\r\n            }, 2000);                \r\n        }\r\n        else{\r\n            const formdata = new FormData()\r\n            formdata.append('image',image)\r\n            try {\r\n                await fetch(`http://chatbaze.site/profilepic/${userID}/update`,{\r\n                    method: 'POST',\r\n                    headers : {\r\n                        'authorization' : JSON.stringify(userdata),\r\n                    },\r\n                    body:formdata,\r\n                })\r\n                .then(res => res.json())\r\n                .then(parsed => {\r\n                    console.log(parsed)\r\n                    if(typeof parsed === 'string'){\r\n                        setprofilePicMessage(parsed)\r\n                        setTimeout(() => {\r\n                            setprofilePicMessage('')\r\n                        }, 2000);\r\n                        setImage()\r\n                    }\r\n                })\r\n\r\n                setTimeout(() => {\r\n                    fetchdata()                       \r\n                }, 5000)\r\n            }            \r\n            catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n\r\n    }\r\n        \r\n    return (\r\n        isLoggedIn &&\r\n        <div className='profile'>\r\n\r\n            <div className=\"topContainer\">\r\n                <button id='back' onClick={()=> navigate(-1)}>BACK</button>                \r\n            </div>\r\n\r\n            <div className=\"bottomContainer\">\r\n\r\n                <div className=\"bottomContainer1\">                    \r\n                    {user.profileURL && <img src={`http://chatbaze.site/${user.profileURL}`} alt=\"\" className=\"profilePic\"/>}\r\n                    <button className='profilebtn'\r\n                    onClick={handleClick}>\r\n                        <strong>Update Profile</strong>\r\n                    </button>\r\n                </div>\r\n\r\n                <div className=\"bottomContainer2\">\r\n                    Username : <input className='edit' type=\"text\" placeholder={user.username}\r\n                    onChange={e => setUsername(e.target.value)} />\r\n                    Bio : <input className='edit' type=\"text\" placeholder={user.bio? user.bio : ''}\r\n                    onChange={e => setBio(e.target.value)} />\r\n                    <p style={{color:'blue'}}>{profileMessage}</p>\r\n\r\n                    <h3>Update profile picture</h3>\r\n                    <div className=\"profileUpdate\">\r\n                        <ImgUpload childImage={setImage}/>\r\n                        <button id=\"tweetBtn\"\r\n                        onClick={handleProfile}\r\n                        >UPDATE</button>\r\n                    </div>\r\n                    \r\n                </div>\r\n                    <p style={{color:'blue'}}>{profilePicMessage}</p>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Profile\r\n"],"names":["props","navigate","useNavigate","useContext","AuthContext","userdata","isLoggedIn","userID","useState","user","setUser","bio","setBio","username","setUsername","image","setImage","profileMessage","setProfileMessage","profilePicMessage","setprofilePicMessage","fetchdata","useCallback","fetch","headers","JSON","stringify","then","res","json","setProfilePic","profileURL","useEffect","error","console","log","handleClick","e","preventDefault","trim","setTimeout","formdata","FormData","append","method","body","parsed","handleProfile","className","id","onClick","src","alt","type","placeholder","onChange","target","value","style","color","ImgUpload","childImage"],"sourceRoot":""}